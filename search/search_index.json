{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SANS Holiday Hack Challenge 2021 Overview This document is a writeup of SANS holiday challenge 2021. This document has answers of all the objectives (total 13), high-level approach as well as details on how those answers were derived. Objective completed The story Listen children to a story that was written in the cold 'Bout a ringle and his castle hosting hackers, meek and bold Then from somewhere came another, built his tower tall and proud Surely, he, our Frosty villain hides intentions 'neath a shroud So begins Jack's reckless mission: gather trolls to win a war Build a con that's fresh and shiny, has his yet been done before? Is his Fest more feint than folly? Some have noticed subtle clues Running 'round and raiding repos, stealing Santa's Don'ts and Do's Misdirected, scheming, grasping, Frost intends to seize the day Funding research with a gift shop, can Frost build the better sleigh? Lo, we find unlikely allies: trolls within Jack's own command Doubting Frost and searching motive, questioning his dark demand Is our Jack just lost and rotten - one more outlaw stomping toes? Why then must we piece together cludgy, wacky radios? With this object from the heavens, Frost must know his cover's blown Hearkening from distant planet! We the heroes should have known Go ahead and hack your neighbor, go ahead and phish a friend Do it in the name of holidays, you can justify it at year's end There won't be any retweets praising you, come disclosure day But on the snowy evening after? Still Kris Kringle rides the sleigh Answer to objectives and High-level approach Objectives Answers High level approach 1.Kringlecon Orientation answer Write \u201canswer\u201d in the top pane of the terminal presented by the elf Jingle Ringford. 2.Where in the world is Carmel Santaigo? Solved in the game OWASP Sensitive data exposure : (In the flask cookie) Get the hints about the elf and their route info by decoding the flask cookie and use it in the game to follow and find the elf. 3.Thaw Frost Tower's entrance Solved in the game API Abuse : Use the API http://nidus-setup:8080/api/cooler to increase the temperature of the thermostat to thaw the frozen entrance. 4.Slot machine Investigation I'm going to have some bouncer trolls bounce you right out of this casino! API Abuse: Manipulate the \u201cnumline\u201d parameter sent to https://slots.jackfrosttower.com/ to increase the bet amount an exceed 1000 coins and reveal the answer. 5.Strange USB Device ickymcgoop USB Rubber Ducky : Use mallard.py to decode the encoded USB ducky script (/mnt/USBDEVICE/inject.bin). In the decoded value, find another reversed base64 value, reverse it and decode to find the user for whom an authorized_key file is getting created with the public cert. 6.Shellcode Primer cyber security knowledge Shell code : On Step 11) '/var/northpolesecrets.txt' 1. Call sys_open to open the file 2. Call sys_read to read the file using buffer (mov rsi, rsp) 3. Call sys_write to write contents from rsp to stdout (Keep the count high e.g., 1000 so we can account for all contents in the file) 7.Printer Exploitation Troll_Pay_Chart.xlsx Hash Length extender attack : 1.Download the firmware, decode the firmware field from base64 to extract the zip file. 2.Craft the payload to copy the name of last printed xlsx file to a new file and copy the file to /incoming folder. 3.Use hash extender to append our payload zip to original zip file using hash and base64 encode the output. Create the JSON firmware from it. 4. Upload the new JSON firmware to the portal. 5. Download the file from /incoming folder which will have the name of the last printed .xlsx file. 8.Kerberoasting on an Open Fire Kindness Kerberoasting and WriteDACL abuse : 1.Get the two shared folders in the network using our user: elfu_svc_shr and research_dep 2.Kerberoasting attack to get TGS (Ticket granting service) hash for elfu_svc. 3.Use Hashcat to crack TGS hash for elfu_svc user. 4.Get hard coded creds for remote_elf embedded in PowerShell script which is stored in \\elfu_svc_shr share. 5.PrivEsc \u2013 Use WriteDACL to add our low priv. user to AD group \u201cResearch Department\u201d. 6.Access the secret document \u201cSantaSecretToAWonderfulHolidaySeason.pdf\u201d in the \\reserach_dep to find the answer. 9.Splunk whiz Splunk queries on Sysmon and Github audit data (Described in the relevant section below) 10.Now Hiring CGgQcSdERePvGgr058r3PObPq3+0CfraKcsLREpX Server-Side Request Forgery (SSRF) on EC2 hosted website: 1.Website has URL as an input in the \u201cURL to your NLBI report\u201d field. 2.Send http://169.254.169.254/latest/meta-data/iam/security-credentials/ in the URL and see the name of IAM role (\u201cjf-deploy-role\u201d) attached to the EC2 instance returned in the response of the GET request of an image. 3.Send http://169.254.169.254/latest/meta-data/iam/security-credentials/jf-deploy-role in the URL input and get the secret access key returned in the response of the GET request of an image. 11.Customer Complaint Analysis Flud Hagg Yaqh Packet Analysis using Wireshark for RFC 3514 compliance: 1. From .pcap file, find the room number for the guest who is RFC 3514 non-compliant using ip.flags.rb == 0 2.From the .pcap file, find the trolls who are compliant (ip.flags.rb == 1) and complaining about the guest in the room number found in 1) 12. Frost Tower Website Checkup Clerk OWASP broken auth and SQL Injection attacks: 1.Examine the source code 2.Broken auth: Exploit the /postcontact endpoint to log in and get access to the dashboard. 3.SQL Injection: Exploit the /detail endpoint to get additional table name (\u201ctodo\u201d) and its column names. 4.Get data from table \u201ctodo\u201d table having the job position for Santa. 13. FPGA Programming TBD TBD 1. Kringlecon Orientation Upon login on https://2021.kringlecon.com , we see Jingle Ringford guarding the entry asking below First things first, here's your badge! It's that wrapped present in the middle of your avatar. Click on the badge on your avatar \ud83c\udf81. That\u2019s where you will see your Objectives, Hints, and gathered Items for the Holiday Hack Challenge. We\u2019ve also got handy links to the KringleCon talks and more there for you! Next, click on that USB wifi adapter - just in case you need it later. We pick up the Wi-Fi adapter. We click on the terminal to access it and then type \u201canswer\u201d in the upper pane of the terminal and the gate is opened. 2. Where in the world is Carmel Santaigo Hints from Tangle Coalbox Turns out some elves have gone on some misdirected journeys around the globe. It seems that someone is messing with their travel plans. We could sure use your open-source intelligence (OSINT) skills to find them. Why dontcha' log into this vintage Cranberry Pi terminal and see if you have what it takes to track them around the globe. If you're having any trouble with it, you might ask Piney Sappington right over there for tips . Tangle Coalbox indicates another elf named \u201cPiney Sappington\u201d may have some hints on how to solve this objective. So, we head over to that elf now who is also present in the courtyard. Hints from Piney Sappington You see, I've been looking at these documents, and I know someone has tampered with one file. Do you think you could log into this Cranberry Pi and take a look? It has exiftool installed on it, if that helps you at all. I just... Well, I have a feeling that someone at that other conference might have fiddled with things. And, if you help me figure this tampering issue out, I\u2019ll give you some hints about OSINT, especially associated with geographic locations! In the terminal we are presented with the below problem: HELP! That wily jack Frost Modified one of our naughty/nice records, and right before Christmas! Can you help us which one? We\u2019ve installed exiftool for your convenience! We will get the Last Modified By attribute value for all the docx files and then grep the output it with \u201cJack\u201d. That should give us all the files which were last modified by Jack Frost. We have -C 5 in the grep so we can get the lines around the matches for the context. Command entry and output : Answer verification : Achivement Unlocked : Hint Unlocked : The \u201cflask cookies\u201d hint is actually a Github Gist from Mr. Chris Elgee. https://gist.github.com/chriselgee/b9f1861dd9b99a8c1ed30066b25ff80b That above gist shows how one can decode the value in a cookie generated by Flask applications. Going back to objective #2 we start the game. In the browser we open developer tools. Under developer tools > Application tab there is a cookie named \"Cookiepella\" for the domain used for the challenge (caramel.kringlecastle.com). We follow the instructions to decode the value in the flask cookie to JSON. cookie = \"<value of the cookiepella cookie>\" import zlib; import itsdangerous zlib.decompress(itsdangerous.base64_decode(cookie)) We format the output JSON for better understanding. The JSON has details about the elf to identify them. The JSON has also has the route the elf took. We can take the same route to catch the elf. On the visit interlink page, we supply data we have in the decoded flask cookie and click on \"Filter Elves\". The elves have been filtered out based on the data and possibly Its Morcel Nougat and their location was \"Santa's Castel\" Both of these datapoints are also in the decoded cookie value. Note the route taken by the elf in the decoded cookie value: Stuttgart, Germany > Tokyo, Japan > London, England > PlaceHolder We click on \"Depart by sleigh\" to follow the same route to catch up with the elf in London, England. In London, England, we notice there is no option to \"Depart by Sleigh\" which indicates we are close to the elf. We click on Investigate. We are presented with 3 investigate options. When we click on \"Investigate 1\", It says we have caught up to the elf. We are given the option to guess the elf. We choose \"Morcel Nouget\" since Its also in the name of the elf in the decoded cookie. Upon selecting the elf and clicking on the \u201cGuess Elf\u201d The message \"You've won\" appears which means we have completed the challenge. 3. Thaw Frost Tower Entrance Challenge : Turn up the heat to defrost the entrance to Frost Tower. Click on the Items tab in your badge to find a link to the Wifi Dongle's CLI interface. Talk to Greasy Gopherguts outside the tower for tips Difficulty Level : Location : Frost Tower Entrance Elf/Troll : Grimy McTrollkins Hints from Grimy McTrollkins Yo, I'm Grimy McTrollkins. I'm a troll and I work for the big guy over there: Jack Frost. I\u2019d rather not be bothered talking with you, but I\u2019m kind of in a bind and need your help. Jack Frost is so obsessed with icy cold that he accidentally froze shut the door to Frost Tower! I wonder if you can help me get back in. I think we can melt the door open if we can just get access to the thermostat inside the building. That thermostat uses Wi-Fi. And I\u2019ll bet you picked up a Wi-Fi adapter for your badge when you got to the North Pole. Click on your badge and go to the Items tab. There, you should see your Wi-Fi Dongle and a button to \u201cOpen Wi-Fi CLI.\u201d That\u2019ll give you command-line interface access to your badge\u2019s wireless capabilities. Click on the badge and go to the Items tab. There, we see the Wi-Fi Dongle and a button to \u201cOpen Wi-Fi CLI.\u201d That gives us command-line interface access to wireless capabilities. Scan for any available the ESSIDs iwlist wlan0 scanning We find an ESSID named \u201cFROST-Nidus-Setup\u201d. Now we connect to \u201cFROST-Nidus-Setup\u201d ESSID. iwconfig wlan0 essid FROST-Nidus-Setup Connection succecssful to the ESSID. Issue a curl command to http://nidus-setup:8080. curl http://nidus-setup:8080 Looks like few APIs are hosted there. Access the API docs Note the /api/cooler does not need registration curl http://nidus-setup:8080/apidoc Following the documentation, we make use of /cooler endpoint passing a temperature which may melt ice e.g., 110 degrees curl -XPOST -H 'Content-Type: application/json' \\ --data-binary '{\"temperature\": 110}' \\ http://nidus-setup:8080/api/cooler The jack frost tower entrance is now open and the objective is now completed. 4. Slot Machine Investigation Challenge : Test the security of Jack Frost's slot machines. What does the Jack Frost Tower casino security team threaten to do when your coin total exceeds 1000? Submit the string in the server data.response element. Talk to Noel Boetie outside Santa's Castle for help. Difficulty Level : Location : Frost Tower Lobby Elf/Troll : Hubris Selfington Hints from Hubris Selfington The big boss told me he\u2019s worried about vulnerabilities in his slot machines, especially this one. Statistically speaking, it seems to be paying out way too much. He asked me to see if there are any security flaws in it. The boss has HUGE plans and we\u2019ve gotta make sure we are running a tight ship here at Frost Tower. Hint: The objective states \u201cSubmit the string in the server data. response element\u201d Clicking on the slot machine behind the troll opens https://slots.jackfrosttower.com where we can click \u201cPlay game\u201d to open the game. We open Burp Suite and capture traffic for only slots.jackfrosttower.com. Click \"Spin\" in the bottom right corner. Burp intercepts the requests and shows a POST request to the /api/v1/ /spin with three parameters: betamount numline cpl We investigate with repeater, sending 1001 to the betamount parameter and It does not work. Keeping the betamount parameter as 1001 (because we need to bet with >1000 coins), we manipulate the other two parameters, numline and cpl, send them to the API to see if we are successful. Manipulating parameter values Request Response Decrease cpl to 0.0 Increase cpl to 0.2 Decrease numline to 10 Increase numline to 30 Make numline a negative number Full request and response showing sending a negative value in the numline parameter would show a message in a new field named \"response\". data.response : I'm going to have some bouncer trolls bounce you right out of this casino! We submit the highlighted as the answer for the Slot Machine Investigation objective and its accepted! 5. Strange USB device 6. Shell Code Primer 7. Printer Exploitation 8. Kerberoasting on an Open Fire 9. Splunk 10. Now Hiring 11. Customer Complaint Analysis 12. Frost Tower Website Checkup 13. FPGA Programming mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"SANS Holiday Hack Challenge 2021"},{"location":"#sans-holiday-hack-challenge-2021","text":"","title":"SANS Holiday Hack Challenge 2021"},{"location":"#overview","text":"This document is a writeup of SANS holiday challenge 2021. This document has answers of all the objectives (total 13), high-level approach as well as details on how those answers were derived. Objective completed The story Listen children to a story that was written in the cold 'Bout a ringle and his castle hosting hackers, meek and bold Then from somewhere came another, built his tower tall and proud Surely, he, our Frosty villain hides intentions 'neath a shroud So begins Jack's reckless mission: gather trolls to win a war Build a con that's fresh and shiny, has his yet been done before? Is his Fest more feint than folly? Some have noticed subtle clues Running 'round and raiding repos, stealing Santa's Don'ts and Do's Misdirected, scheming, grasping, Frost intends to seize the day Funding research with a gift shop, can Frost build the better sleigh? Lo, we find unlikely allies: trolls within Jack's own command Doubting Frost and searching motive, questioning his dark demand Is our Jack just lost and rotten - one more outlaw stomping toes? Why then must we piece together cludgy, wacky radios? With this object from the heavens, Frost must know his cover's blown Hearkening from distant planet! We the heroes should have known Go ahead and hack your neighbor, go ahead and phish a friend Do it in the name of holidays, you can justify it at year's end There won't be any retweets praising you, come disclosure day But on the snowy evening after? Still Kris Kringle rides the sleigh","title":"Overview"},{"location":"#answer-to-objectives-and-high-level-approach","text":"Objectives Answers High level approach 1.Kringlecon Orientation answer Write \u201canswer\u201d in the top pane of the terminal presented by the elf Jingle Ringford. 2.Where in the world is Carmel Santaigo? Solved in the game OWASP Sensitive data exposure : (In the flask cookie) Get the hints about the elf and their route info by decoding the flask cookie and use it in the game to follow and find the elf. 3.Thaw Frost Tower's entrance Solved in the game API Abuse : Use the API http://nidus-setup:8080/api/cooler to increase the temperature of the thermostat to thaw the frozen entrance. 4.Slot machine Investigation I'm going to have some bouncer trolls bounce you right out of this casino! API Abuse: Manipulate the \u201cnumline\u201d parameter sent to https://slots.jackfrosttower.com/ to increase the bet amount an exceed 1000 coins and reveal the answer. 5.Strange USB Device ickymcgoop USB Rubber Ducky : Use mallard.py to decode the encoded USB ducky script (/mnt/USBDEVICE/inject.bin). In the decoded value, find another reversed base64 value, reverse it and decode to find the user for whom an authorized_key file is getting created with the public cert. 6.Shellcode Primer cyber security knowledge Shell code : On Step 11) '/var/northpolesecrets.txt' 1. Call sys_open to open the file 2. Call sys_read to read the file using buffer (mov rsi, rsp) 3. Call sys_write to write contents from rsp to stdout (Keep the count high e.g., 1000 so we can account for all contents in the file) 7.Printer Exploitation Troll_Pay_Chart.xlsx Hash Length extender attack : 1.Download the firmware, decode the firmware field from base64 to extract the zip file. 2.Craft the payload to copy the name of last printed xlsx file to a new file and copy the file to /incoming folder. 3.Use hash extender to append our payload zip to original zip file using hash and base64 encode the output. Create the JSON firmware from it. 4. Upload the new JSON firmware to the portal. 5. Download the file from /incoming folder which will have the name of the last printed .xlsx file. 8.Kerberoasting on an Open Fire Kindness Kerberoasting and WriteDACL abuse : 1.Get the two shared folders in the network using our user: elfu_svc_shr and research_dep 2.Kerberoasting attack to get TGS (Ticket granting service) hash for elfu_svc. 3.Use Hashcat to crack TGS hash for elfu_svc user. 4.Get hard coded creds for remote_elf embedded in PowerShell script which is stored in \\elfu_svc_shr share. 5.PrivEsc \u2013 Use WriteDACL to add our low priv. user to AD group \u201cResearch Department\u201d. 6.Access the secret document \u201cSantaSecretToAWonderfulHolidaySeason.pdf\u201d in the \\reserach_dep to find the answer. 9.Splunk whiz Splunk queries on Sysmon and Github audit data (Described in the relevant section below) 10.Now Hiring CGgQcSdERePvGgr058r3PObPq3+0CfraKcsLREpX Server-Side Request Forgery (SSRF) on EC2 hosted website: 1.Website has URL as an input in the \u201cURL to your NLBI report\u201d field. 2.Send http://169.254.169.254/latest/meta-data/iam/security-credentials/ in the URL and see the name of IAM role (\u201cjf-deploy-role\u201d) attached to the EC2 instance returned in the response of the GET request of an image. 3.Send http://169.254.169.254/latest/meta-data/iam/security-credentials/jf-deploy-role in the URL input and get the secret access key returned in the response of the GET request of an image. 11.Customer Complaint Analysis Flud Hagg Yaqh Packet Analysis using Wireshark for RFC 3514 compliance: 1. From .pcap file, find the room number for the guest who is RFC 3514 non-compliant using ip.flags.rb == 0 2.From the .pcap file, find the trolls who are compliant (ip.flags.rb == 1) and complaining about the guest in the room number found in 1) 12. Frost Tower Website Checkup Clerk OWASP broken auth and SQL Injection attacks: 1.Examine the source code 2.Broken auth: Exploit the /postcontact endpoint to log in and get access to the dashboard. 3.SQL Injection: Exploit the /detail endpoint to get additional table name (\u201ctodo\u201d) and its column names. 4.Get data from table \u201ctodo\u201d table having the job position for Santa. 13. FPGA Programming TBD TBD","title":"Answer to objectives and High-level approach"},{"location":"#1-kringlecon-orientation","text":"Upon login on https://2021.kringlecon.com , we see Jingle Ringford guarding the entry asking below First things first, here's your badge! It's that wrapped present in the middle of your avatar. Click on the badge on your avatar \ud83c\udf81. That\u2019s where you will see your Objectives, Hints, and gathered Items for the Holiday Hack Challenge. We\u2019ve also got handy links to the KringleCon talks and more there for you! Next, click on that USB wifi adapter - just in case you need it later. We pick up the Wi-Fi adapter. We click on the terminal to access it and then type \u201canswer\u201d in the upper pane of the terminal and the gate is opened.","title":"1. Kringlecon Orientation"},{"location":"#2-where-in-the-world-is-carmel-santaigo","text":"Hints from Tangle Coalbox Turns out some elves have gone on some misdirected journeys around the globe. It seems that someone is messing with their travel plans. We could sure use your open-source intelligence (OSINT) skills to find them. Why dontcha' log into this vintage Cranberry Pi terminal and see if you have what it takes to track them around the globe. If you're having any trouble with it, you might ask Piney Sappington right over there for tips . Tangle Coalbox indicates another elf named \u201cPiney Sappington\u201d may have some hints on how to solve this objective. So, we head over to that elf now who is also present in the courtyard. Hints from Piney Sappington You see, I've been looking at these documents, and I know someone has tampered with one file. Do you think you could log into this Cranberry Pi and take a look? It has exiftool installed on it, if that helps you at all. I just... Well, I have a feeling that someone at that other conference might have fiddled with things. And, if you help me figure this tampering issue out, I\u2019ll give you some hints about OSINT, especially associated with geographic locations! In the terminal we are presented with the below problem: HELP! That wily jack Frost Modified one of our naughty/nice records, and right before Christmas! Can you help us which one? We\u2019ve installed exiftool for your convenience! We will get the Last Modified By attribute value for all the docx files and then grep the output it with \u201cJack\u201d. That should give us all the files which were last modified by Jack Frost. We have -C 5 in the grep so we can get the lines around the matches for the context. Command entry and output : Answer verification : Achivement Unlocked : Hint Unlocked : The \u201cflask cookies\u201d hint is actually a Github Gist from Mr. Chris Elgee. https://gist.github.com/chriselgee/b9f1861dd9b99a8c1ed30066b25ff80b That above gist shows how one can decode the value in a cookie generated by Flask applications. Going back to objective #2 we start the game. In the browser we open developer tools. Under developer tools > Application tab there is a cookie named \"Cookiepella\" for the domain used for the challenge (caramel.kringlecastle.com). We follow the instructions to decode the value in the flask cookie to JSON. cookie = \"<value of the cookiepella cookie>\" import zlib; import itsdangerous zlib.decompress(itsdangerous.base64_decode(cookie)) We format the output JSON for better understanding. The JSON has details about the elf to identify them. The JSON has also has the route the elf took. We can take the same route to catch the elf. On the visit interlink page, we supply data we have in the decoded flask cookie and click on \"Filter Elves\". The elves have been filtered out based on the data and possibly Its Morcel Nougat and their location was \"Santa's Castel\" Both of these datapoints are also in the decoded cookie value. Note the route taken by the elf in the decoded cookie value: Stuttgart, Germany > Tokyo, Japan > London, England > PlaceHolder We click on \"Depart by sleigh\" to follow the same route to catch up with the elf in London, England. In London, England, we notice there is no option to \"Depart by Sleigh\" which indicates we are close to the elf. We click on Investigate. We are presented with 3 investigate options. When we click on \"Investigate 1\", It says we have caught up to the elf. We are given the option to guess the elf. We choose \"Morcel Nouget\" since Its also in the name of the elf in the decoded cookie. Upon selecting the elf and clicking on the \u201cGuess Elf\u201d The message \"You've won\" appears which means we have completed the challenge.","title":"2. Where in the world is Carmel Santaigo"},{"location":"#3-thaw-frost-tower-entrance","text":"Challenge : Turn up the heat to defrost the entrance to Frost Tower. Click on the Items tab in your badge to find a link to the Wifi Dongle's CLI interface. Talk to Greasy Gopherguts outside the tower for tips Difficulty Level : Location : Frost Tower Entrance Elf/Troll : Grimy McTrollkins Hints from Grimy McTrollkins Yo, I'm Grimy McTrollkins. I'm a troll and I work for the big guy over there: Jack Frost. I\u2019d rather not be bothered talking with you, but I\u2019m kind of in a bind and need your help. Jack Frost is so obsessed with icy cold that he accidentally froze shut the door to Frost Tower! I wonder if you can help me get back in. I think we can melt the door open if we can just get access to the thermostat inside the building. That thermostat uses Wi-Fi. And I\u2019ll bet you picked up a Wi-Fi adapter for your badge when you got to the North Pole. Click on your badge and go to the Items tab. There, you should see your Wi-Fi Dongle and a button to \u201cOpen Wi-Fi CLI.\u201d That\u2019ll give you command-line interface access to your badge\u2019s wireless capabilities. Click on the badge and go to the Items tab. There, we see the Wi-Fi Dongle and a button to \u201cOpen Wi-Fi CLI.\u201d That gives us command-line interface access to wireless capabilities. Scan for any available the ESSIDs iwlist wlan0 scanning We find an ESSID named \u201cFROST-Nidus-Setup\u201d. Now we connect to \u201cFROST-Nidus-Setup\u201d ESSID. iwconfig wlan0 essid FROST-Nidus-Setup Connection succecssful to the ESSID. Issue a curl command to http://nidus-setup:8080. curl http://nidus-setup:8080 Looks like few APIs are hosted there. Access the API docs Note the /api/cooler does not need registration curl http://nidus-setup:8080/apidoc Following the documentation, we make use of /cooler endpoint passing a temperature which may melt ice e.g., 110 degrees curl -XPOST -H 'Content-Type: application/json' \\ --data-binary '{\"temperature\": 110}' \\ http://nidus-setup:8080/api/cooler The jack frost tower entrance is now open and the objective is now completed.","title":"3. Thaw Frost Tower Entrance"},{"location":"#4-slot-machine-investigation","text":"Challenge : Test the security of Jack Frost's slot machines. What does the Jack Frost Tower casino security team threaten to do when your coin total exceeds 1000? Submit the string in the server data.response element. Talk to Noel Boetie outside Santa's Castle for help. Difficulty Level : Location : Frost Tower Lobby Elf/Troll : Hubris Selfington Hints from Hubris Selfington The big boss told me he\u2019s worried about vulnerabilities in his slot machines, especially this one. Statistically speaking, it seems to be paying out way too much. He asked me to see if there are any security flaws in it. The boss has HUGE plans and we\u2019ve gotta make sure we are running a tight ship here at Frost Tower. Hint: The objective states \u201cSubmit the string in the server data. response element\u201d Clicking on the slot machine behind the troll opens https://slots.jackfrosttower.com where we can click \u201cPlay game\u201d to open the game. We open Burp Suite and capture traffic for only slots.jackfrosttower.com. Click \"Spin\" in the bottom right corner. Burp intercepts the requests and shows a POST request to the /api/v1/ /spin with three parameters: betamount numline cpl We investigate with repeater, sending 1001 to the betamount parameter and It does not work. Keeping the betamount parameter as 1001 (because we need to bet with >1000 coins), we manipulate the other two parameters, numline and cpl, send them to the API to see if we are successful. Manipulating parameter values Request Response Decrease cpl to 0.0 Increase cpl to 0.2 Decrease numline to 10 Increase numline to 30 Make numline a negative number Full request and response showing sending a negative value in the numline parameter would show a message in a new field named \"response\". data.response : I'm going to have some bouncer trolls bounce you right out of this casino! We submit the highlighted as the answer for the Slot Machine Investigation objective and its accepted!","title":"4. Slot Machine Investigation"},{"location":"#5-strange-usb-device","text":"","title":"5. Strange USB device"},{"location":"#6-shell-code-primer","text":"","title":"6. Shell Code Primer"},{"location":"#7-printer-exploitation","text":"","title":"7. Printer Exploitation"},{"location":"#8-kerberoasting-on-an-open-fire","text":"","title":"8. Kerberoasting on an Open Fire"},{"location":"#9-splunk","text":"","title":"9. Splunk"},{"location":"#10-now-hiring","text":"","title":"10. Now Hiring"},{"location":"#11-customer-complaint-analysis","text":"","title":"11. Customer Complaint Analysis"},{"location":"#12-frost-tower-website-checkup","text":"","title":"12. Frost Tower Website Checkup"},{"location":"#13-fpga-programming","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"13. FPGA Programming"}]}